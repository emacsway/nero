// Code generated by nero, DO NOT EDIT.
package user

type Aggregator struct {
	collection string
	dest       interface{}
	aggfs      []AggFunc
	pfs        []PredFunc
	sfs        []SortFunc
	groups     []Column
}

func NewAggregator(dest interface{}) *Aggregator {
	return &Aggregator{
		collection: collection,
		dest:       dest,
	}
}

func (a *Aggregator) Aggregate(aggfs ...AggFunc) *Aggregator {
	a.aggfs = append(a.aggfs, aggfs...)
	return a
}

func (a *Aggregator) Where(pfs ...PredFunc) *Aggregator {
	a.pfs = append(a.pfs, pfs...)
	return a
}

func (a *Aggregator) Sort(sfs ...SortFunc) *Aggregator {
	a.sfs = append(a.sfs, sfs...)
	return a
}

func (a *Aggregator) Group(cols ...Column) *Aggregator {
	a.groups = append(a.groups, cols...)
	return a
}
