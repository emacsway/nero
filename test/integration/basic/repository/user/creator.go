// Code generated by nero, DO NOT EDIT.
package user

import (
	uuid "github.com/google/uuid"
	example "github.com/sf9v/nero/example"
	user "github.com/sf9v/nero/test/integration/basic/user"
	"time"
)

type Creator struct {
	collection string
	columns    []string
	uID        uuid.UUID
	email      *string
	name       *string
	age        int
	group      user.Group
	kv         example.Map
	updatedAt  *time.Time
}

func NewCreator() *Creator {
	return &Creator{
		collection: collection,
		columns:    []string{"uid", "email", "name", "age", "group_res", "kv", "updated_at"},
	}
}

func (c *Creator) UID(uID uuid.UUID) *Creator {
	c.uID = uID
	return c
}

func (c *Creator) Email(email *string) *Creator {
	c.email = email
	return c
}

func (c *Creator) Name(name *string) *Creator {
	c.name = name
	return c
}

func (c *Creator) Age(age int) *Creator {
	c.age = age
	return c
}

func (c *Creator) Group(group user.Group) *Creator {
	c.group = group
	return c
}

func (c *Creator) Kv(kv example.Map) *Creator {
	c.kv = kv
	return c
}

func (c *Creator) UpdatedAt(updatedAt *time.Time) *Creator {
	c.updatedAt = updatedAt
	return c
}
